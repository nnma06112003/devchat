-- ===== ENUMS =====
DO $$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'message_type') THEN
    CREATE TYPE message_type AS ENUM (
      'message','reply-message','remove','notification','system',
      'code-share','file-upload','code-card','tool'
    );
  END IF;
END$$;

-- ===== TABLE: users =====
CREATE TABLE users (
  id                    INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  username              VARCHAR(255),
  email                 VARCHAR(320) NOT NULL UNIQUE,
  password              VARCHAR(255),
  provider              VARCHAR(50),
  provider_id           VARCHAR(100),
  role                  VARCHAR(50) NOT NULL DEFAULT 'user',
  refresh_token         TEXT,
  created_at            TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at            TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  verification_token    VARCHAR(255),
  email_verified        BOOLEAN NOT NULL DEFAULT FALSE,
  github_verified       BOOLEAN NOT NULL DEFAULT FALSE,
  github_installation_id TEXT,
  github_user_id        TEXT,
  github_email          VARCHAR(320),
  github_avatar         TEXT
);

-- ===== TABLE: channels =====
CREATE TABLE channels (
  id            INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name          VARCHAR(255) NOT NULL,
  type          VARCHAR(20) NOT NULL DEFAULT 'group',
  member_count  INT NOT NULL DEFAULT 0,
  created_at    TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at    TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  owner_id      INT,
  CONSTRAINT channels_type_chk
    CHECK (type IN ('personal','group','group-private')),
  CONSTRAINT channels_owner_fk
    FOREIGN KEY (owner_id) REFERENCES users(id)
    ON DELETE SET NULL ON UPDATE CASCADE
);

-- ===== TABLE: repositories =====
CREATE TABLE repositories (
  id        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  repo_id   VARCHAR(512) NOT NULL,
  user_id   INT NOT NULL,
  CONSTRAINT repositories_user_fk
    FOREIGN KEY (user_id) REFERENCES users(id)
    ON DELETE RESTRICT ON UPDATE CASCADE
);

-- ===== TABLE: messages =====
-- Lưu ý: để hỗ trợ ON DELETE SET NULL cho sender, cột sender_id phải cho phép NULL.
CREATE TABLE messages (
  id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  type        message_type NOT NULL DEFAULT 'message',
  text        TEXT,
  channel_id  INT NOT NULL,
  sender_id   INT,
  json_data   JSONB,
  ispin       BOOLEAN NOT NULL DEFAULT FALSE,
  replyto     JSONB,
  like_data   JSONB,
  send_at     TIMESTAMP,
  created_at  TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at  TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  CONSTRAINT messages_channel_fk
    FOREIGN KEY (channel_id) REFERENCES channels(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT messages_sender_fk
    FOREIGN KEY (sender_id) REFERENCES users(id)
    ON DELETE SET NULL ON UPDATE CASCADE
);

-- ===== TABLE: attachments =====
CREATE TABLE attachments (
  id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  fileurl     VARCHAR(1024) NOT NULL,
  mimetype    VARCHAR(255) NOT NULL,
  key         VARCHAR(255) NOT NULL,
  filename    VARCHAR(255),
  filesize    INT,
  messageid   INT NOT NULL,
  created_at  TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at  TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  CONSTRAINT attachments_message_fk
    FOREIGN KEY (messageid) REFERENCES messages(id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- ===== JOIN TABLE: channel_members (channels <-> users) =====
CREATE TABLE channel_members (
  channel_id  INT NOT NULL,
  user_id     INT NOT NULL,
  PRIMARY KEY (channel_id, user_id),
  CONSTRAINT chmem_channel_fk
    FOREIGN KEY (channel_id) REFERENCES channels(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT chmem_user_fk
    FOREIGN KEY (user_id) REFERENCES users(id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- ===== JOIN TABLE: repository_channels (repositories <-> channels) =====
CREATE TABLE repository_channels (
  repository_id INT NOT NULL,
  channel_id    INT NOT NULL,
  PRIMARY KEY (repository_id, channel_id),
  CONSTRAINT repoch_repository_fk
    FOREIGN KEY (repository_id) REFERENCES repositories(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT repoch_channel_fk
    FOREIGN KEY (channel_id) REFERENCES channels(id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- ===== (Tùy chọn) Chỉ mục hữu ích =====
-- CREATE INDEX idx_messages_channel ON messages(channel_id);
-- CREATE INDEX idx_messages_sender ON messages(sender_id);
-- CREATE INDEX idx_attachments_message ON attachments(messageid);
-- CREATE INDEX idx_repositories_user ON repositories(user_id);
-- CREATE INDEX idx_channel_members_user ON channel_members(user_id);
-- CREATE INDEX idx_repository_channels_channel ON repository_channels(channel_id);
